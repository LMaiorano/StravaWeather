image: "python:3.7"

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - date
  - python --version  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt


after_script:
  - date

stages:
  - Static_Analysis
  - Test

pylint:
  stage: Static_Analysis
  allow_failure: true
  script:
    - pip install pylint
    # By disabling import errors it's not needed to install all the requirements
    - pylint --rcfile .pylintrc project/
    
    
radon:
  stage: Static_Analysis
  allow_failure: true
  script:
    - pip install radon
    - radon cc project/
    - radon raw project/
    - radon mi project/
    - radon hal project/

pylama:
  stage: Static_Analysis
  allow_failure: true
  script:
    - pip install pylama
    # Disable unused imports warnings
    - pylama --ignore W0611 project/

    

flake8:
  stage: Static_Analysis
  script:
    - pip install flake8
    - flake8 --max-line-length=120 bild/*.py

pytest:
  stage: Test
  allow_failure: true
  script:
    - pip install pytest
    - python -m pytest 
    - pytest --cov-config=.coveragerc --cov=project --cov-report=html project/test
  artifacts:
    reports:
      metrics: metrics.txt
  

coverage:
  stage: Test
  allow_failure: true
  script:
    - coverage run --branch --source=project project/test/database_test.py
    - coverage report -m
    - echo 'metric_name metric_value' > metrics.txt
  coverage: '/TOTAL.*\s+(\d+%)$/'
